/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.project.basdat;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author rifkyakhsanulhadi
 */

public class MenuBarang extends javax.swing.JFrame {
    
    /**
     * Creates new form MenuBarang
     */
    public MenuBarang() {
        initComponents();
        populateBarangTable();
        populatePenjualanTable();
        populateBarangPenjualanTable();
        textIdPembelian.setText(generateID());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBarang = new javax.swing.JTable();
        textIdBarang = new javax.swing.JTextField();
        textHarga = new javax.swing.JTextField();
        textNamaBarang = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        textCari = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPenjualan = new javax.swing.JTable();
        textIDPembelian = new javax.swing.JTextField();
        textBarangPembelian = new javax.swing.JTextField();
        textHargaPembelian = new javax.swing.JTextField();
        textJumlahPembelian = new javax.swing.JTextField();
        textTotalPembelian = new javax.swing.JTextField();
        labelPenjualan = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textCariPembelian = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        textNamaBarangBeli = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        textHargaBeli = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        textJumlahBeli = new javax.swing.JTextField();
        textCari1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelPembelian = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelKeranjang = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        textTotal = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textIdPembelian = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane2.setBackground(new java.awt.Color(51, 153, 255));
        jTabbedPane2.setForeground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id_Barang", "Nama Barang", "Harga"
            }
        ));
        tabelBarang.setSelectionBackground(new java.awt.Color(51, 153, 255));
        tabelBarang.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelBarang.setShowHorizontalLines(true);
        tabelBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelBarang);

        textIdBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIdBarangActionPerformed(evt);
            }
        });

        jLabel1.setText("Harga");

        jLabel2.setText("ID Barang");

        jLabel3.setText("Nama Barang");

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCariActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 153, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cari");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(289, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(textIdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(textCari, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGap(23, 23, 23)))
                .addGap(213, 213, 213))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textIdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(textCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane2.addTab("Barang", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tabelPenjualan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Pembelian", "Nama Barang", "Harga Satuan", "Jumlah", "Total"
            }
        ));
        tabelPenjualan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPenjualanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelPenjualan);

        textBarangPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBarangPembelianActionPerformed(evt);
            }
        });

        labelPenjualan.setText("ID Pembelian");

        jLabel5.setText("Nama Barang");

        jLabel6.setText("Harga Satuan");

        jLabel7.setText("Jumlah");

        jLabel8.setText("Total");

        jLabel9.setText("Cari Penjualan Per Barang");

        textCariPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCariPembelianActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Cari");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 153, 255));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Update");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(textCariPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPenjualan)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(154, 154, 154)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textJumlahPembelian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIDPembelian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textBarangPembelian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textHargaPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTotalPembelian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(160, 160, 160))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(18, 18, 18)
                            .addComponent(textCariPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(jButton3))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(textIDPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(textBarangPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(labelPenjualan)
                                    .addGap(40, 40, 40)))
                            .addGap(18, 18, 18)
                            .addComponent(textHargaPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textJumlahPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTotalPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jTabbedPane2.addTab("Penjualan", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Jumlah");

        textNamaBarangBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNamaBarangBeliActionPerformed(evt);
            }
        });

        jLabel11.setText("Nama Barang");

        jLabel12.setText("Harga");

        textCari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCari1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(51, 153, 255));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Cari");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tabelPembelian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id_Barang", "Nama Barang", "Harga"
            }
        ));
        tabelPembelian.setSelectionBackground(new java.awt.Color(51, 153, 255));
        tabelPembelian.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelPembelian.setShowHorizontalLines(true);
        tabelPembelian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPembelianMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelPembelian);

        jButton5.setBackground(new java.awt.Color(51, 153, 255));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Masukkan Keranjang");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tabelKeranjang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Barang", "Harga", "Jumlah", "Total"
            }
        ));
        tabelKeranjang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelKeranjangMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelKeranjang);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Keranjang");

        jButton6.setBackground(new java.awt.Color(51, 153, 255));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Check out");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        textTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jButton8.setText("Hapus dari Keranjang");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel4.setText("Kode Pembelian :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton8)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(textTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel13))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textIdPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(textCari1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(98, 98, 98))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textNamaBarangBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textJumlahBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textHargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(153, 153, 153))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNamaBarangBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textIdPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textHargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textJumlahBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(textCari1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedPane2.addTab("Tambah Pembelian", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textIdBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIdBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIdBarangActionPerformed
    
    private void updateData() {
        int selectedRow = tabelBarang.getSelectedRow();

        if (selectedRow != -1) { 
            String column1Value = textIdBarang.getText();
            String column2Value = textNamaBarang.getText();
            String column3Value = textHarga.getText();
            
            int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to update this record?", "Confirmation", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                DefaultTableModel model = (DefaultTableModel) tabelBarang.getModel();
                model.setValueAt(column1Value, selectedRow, 0);
                model.setValueAt(column2Value, selectedRow, 1);
                model.setValueAt(column3Value, selectedRow, 2);

               
                boolean updateResult = updateDatabase(column1Value, column2Value, column3Value);

                if (updateResult) {
                    JOptionPane.showMessageDialog(this, "Record updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error updating record!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    
    private boolean updateDatabase(String column1Value, String column2Value, String column3Value) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");
            
            String updateQuery = "UPDATE Barang SET Id_Barang = ?, Nama_Barang = ?, Harga = ? WHERE Id_Barang = ?";
            
            try (PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
                preparedStatement.setString(1, column1Value);
                preparedStatement.setString(2, column2Value);
                preparedStatement.setString(3, column3Value);
                preparedStatement.setString(4, column1Value);
                
                int rowsAffected = preparedStatement.executeUpdate();
                return rowsAffected > 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private String getIdBarangFromNamaBarang(String namaBarang) {
        String idBarang = null;

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");

            String selectQuery = "SELECT Id_Barang FROM Barang WHERE Nama_Barang = ?";

            try (PreparedStatement preparedStatement = connection.prepareStatement(selectQuery)) {
                preparedStatement.setString(1, namaBarang);

                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    if (resultSet.next()) {
                        idBarang = resultSet.getString("Id_Barang");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return idBarang;
    }

    private void updateDataPembelian() {
        int selectedRow = tabelPenjualan.getSelectedRow();

        if (selectedRow != -1) {
            String column1Value = textIDPembelian.getText();
            String column2Value = textBarangPembelian.getText();
            String column3Value = textHargaPembelian.getText();
            String column4Value = textJumlahPembelian.getText();
            String column5Value = textTotalPembelian.getText();
            String barangLama = tabelPenjualan.getValueAt(selectedRow, 2).toString();
            
            String id_BarangLama = getIdBarangFromNamaBarang(barangLama);
            String id_Barang = getIdBarangFromNamaBarang(column2Value);

            int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to update this record?", "Confirmation", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                DefaultTableModel model = (DefaultTableModel) tabelPenjualan.getModel();
                model.setValueAt(column1Value, selectedRow, 0);
                model.setValueAt(column2Value, selectedRow, 1);
                model.setValueAt(column3Value, selectedRow, 2);
                model.setValueAt(column4Value, selectedRow, 3);
                model.setValueAt(column5Value, selectedRow, 4);
                
                
                boolean updateResult = updateDatabasePembelian(column1Value, id_Barang, column4Value, column5Value, id_BarangLama);

                if (updateResult) {
                    JOptionPane.showMessageDialog(this, "Record updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error updating record!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    private boolean updateDatabasePembelian(String idPembelian, String idBarang, String jumlah, String total, String idBarangLama) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");

            String updateQuery = "UPDATE Detail_Pembelian SET Id_Barang = ?, Quantity = ?, Total = ? WHERE Id_Pembelian = ? AND Id_Barang = ?";

            try (PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
                preparedStatement.setString(1, idBarang);
                preparedStatement.setDouble(2, Double.parseDouble(jumlah)); 
                preparedStatement.setDouble(3, Double.parseDouble(total));
                preparedStatement.setString(4, idPembelian);
                preparedStatement.setString(5, idBarangLama);

                int rowsAffected = preparedStatement.executeUpdate();
                return rowsAffected > 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private void tabelBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBarangMouseClicked
        displaySelectedRowData();
    }//GEN-LAST:event_tabelBarangMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        updateData();
        populateBarangTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCariActionPerformed
        searchTable(textCari.getText());
    }//GEN-LAST:event_textCariActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        searchTable(textCari.getText());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void textBarangPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBarangPembelianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBarangPembelianActionPerformed

    private void tabelPenjualanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPenjualanMouseClicked
        displaySelectedRowDataPenjualan();
    }//GEN-LAST:event_tabelPenjualanMouseClicked

    private void textCariPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCariPembelianActionPerformed
        searchPenjualan(textCariPembelian.getText());
        searchTablePenjualan(textCariPembelian.getText());
    }//GEN-LAST:event_textCariPembelianActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        searchPenjualan(textCariPembelian.getText());
        searchTablePenjualan(textCariPembelian.getText());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void textNamaBarangBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNamaBarangBeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNamaBarangBeliActionPerformed

    private void textCari1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCari1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCari1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tabelPembelianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPembelianMouseClicked
        displaySelectedRowDataPembelian();
    }//GEN-LAST:event_tabelPembelianMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        addToKeranjang();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        checkout();
        populatePenjualanTable();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        updateDataPembelian();
        populatePenjualanTable();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        hapusDataTerpilih();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void tabelKeranjangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKeranjangMouseClicked
        displaySelectedRowDataKeranjang();
    }//GEN-LAST:event_tabelKeranjangMouseClicked
    
    private void searchTable(String keyword) {
        DefaultTableModel model = (DefaultTableModel) tabelBarang.getModel();
        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<>(model);
        tabelBarang.setRowSorter(rowSorter);

        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
    }
    
    private void searchTablePenjualan(String keyword) {
        DefaultTableModel model = (DefaultTableModel) tabelPenjualan.getModel();
        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<>(model);
        tabelPenjualan.setRowSorter(rowSorter);

        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
    }
    
    private void searchPenjualan(String keyword){
        labelPenjualan.setText("Id Barang");
        try (Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");
        PreparedStatement preparedStatement = connection.prepareStatement("SELECT B.Nama_Barang, B.Harga, SUM(DP.Quantity) AS TotalJumlah, SUM(DP.Total) AS TotalHarga FROM Detail_Pembelian DP JOIN Barang B ON DP.Id_Barang = B.Id_Barang WHERE B.Nama_Barang = ? GROUP BY B.Nama_Barang, B.Harga;")) {

        preparedStatement.setString(1, keyword);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                String namaBarang = resultSet.getString("Nama_Barang");
                double harga = resultSet.getDouble("Harga");
                int totalJumlah = resultSet.getInt("TotalJumlah");
                double totalHarga = resultSet.getDouble("TotalHarga");
                String IdBarang = getIdBarangFromNamaBarang(namaBarang);
                textIDPembelian.setText(IdBarang);
                textBarangPembelian.setText(namaBarang);
                textHargaPembelian.setText(Double.toString(harga));
                textJumlahPembelian.setText(Integer.toString(totalJumlah));
                textTotalPembelian.setText(Double.toString(totalHarga));
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void displaySelectedRowData() {
        int selectedRow = tabelBarang.getSelectedRow();

        if (selectedRow != -1) { 
            String column1Value = tabelBarang.getValueAt(selectedRow, 0).toString();
            String column2Value = tabelBarang.getValueAt(selectedRow, 1).toString();
            String column3Value = tabelBarang.getValueAt(selectedRow, 2).toString();

            textIdBarang.setText(column1Value);
            textNamaBarang.setText(column2Value);
            textHarga.setText(column3Value);
        }
    }
    
    private void displaySelectedRowDataPembelian() {
        int selectedRow = tabelPembelian.getSelectedRow();

        if (selectedRow != -1) { 
            String column1Value = tabelPembelian.getValueAt(selectedRow, 1).toString();
            String column2Value = tabelPembelian.getValueAt(selectedRow, 2).toString();

            textNamaBarangBeli.setText(column1Value);
            textHargaBeli.setText(column2Value);
            textJumlahBeli.setText("");
        }
    }
    
    private void displaySelectedRowDataKeranjang() {
        int selectedRow = tabelKeranjang.getSelectedRow();

        if (selectedRow != -1) { 
            String column1Value = tabelKeranjang.getValueAt(selectedRow, 0).toString();
            String column2Value = tabelKeranjang.getValueAt(selectedRow, 1).toString();
            String column3Value = tabelKeranjang.getValueAt(selectedRow, 2).toString();
            
            textNamaBarangBeli.setText(column1Value);
            textHargaBeli.setText(column2Value);
            textJumlahBeli.setText(column3Value);
        }
    }
    
    private void displaySelectedRowDataPenjualan() {
        int selectedRow = tabelPenjualan.getSelectedRow();
        labelPenjualan.setText("Id Pembelian");
        if (selectedRow != -1) { 
            String column1Value = tabelPenjualan.getValueAt(selectedRow, 0).toString();
            String column2Value = tabelPenjualan.getValueAt(selectedRow, 1).toString();
            String column3Value = tabelPenjualan.getValueAt(selectedRow, 2).toString();
            String column4Value = tabelPenjualan.getValueAt(selectedRow, 3).toString();
            String column5Value = tabelPenjualan.getValueAt(selectedRow, 4).toString();


            textIDPembelian.setText(column1Value);
            textBarangPembelian.setText(column2Value);
            textHargaPembelian.setText(column3Value);
            textJumlahPembelian.setText(column4Value);
            textTotalPembelian.setText(column5Value);
        }
    }
    
    private void populateBarangTable(){
        DefaultTableModel model = (DefaultTableModel) tabelBarang.getModel();
        model.setRowCount(0); 

        try  {
            Class.forName( "com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");
            Statement statement = connection.createStatement(); 
            ResultSet resultSet = statement.executeQuery("SELECT * FROM Barang");
            try {
                while (resultSet.next()) {
                    Vector<Object> row = new Vector<>();
                    row.add(resultSet.getString(1));
                    row.add(resultSet.getString(2));
                    row.add(resultSet.getString(3));
                    
                    model.addRow(row);
                }
            } catch (Exception e){
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void populateBarangPenjualanTable(){
        DefaultTableModel model = (DefaultTableModel) tabelPembelian.getModel();
        model.setRowCount(0); 

        try  {
            Class.forName( "com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");
            Statement statement = connection.createStatement(); 
            ResultSet resultSet = statement.executeQuery("SELECT * FROM Barang");
            try {
                while (resultSet.next()) {
                    Vector<Object> row = new Vector<>();
                    row.add(resultSet.getString(1));
                    row.add(resultSet.getString(2));
                    row.add(resultSet.getString(3));
                    
                    model.addRow(row);
                }
            } catch (Exception e){
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    private void populatePenjualanTable(){
        DefaultTableModel model = (DefaultTableModel) tabelPenjualan.getModel();
        model.setRowCount(0); 

        try  {
            Class.forName( "com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");
            Statement statement = connection.createStatement(); 
            ResultSet resultSet = statement.executeQuery("SELECT DP.Id_Pembelian, B.Nama_Barang, B.Harga, DP.Quantity, DP.Total FROM Detail_Pembelian DP JOIN Barang B ON DP.Id_Barang = B.Id_Barang JOIN Pembelian P ON DP.Id_Pembelian = P.Id_Pembelian;");
            try {
                while (resultSet.next()) {
                    Vector<Object> row = new Vector<>();
                    row.add(resultSet.getString(1));
                    row.add(resultSet.getString(2));
                    row.add(resultSet.getString(3));
                    row.add(resultSet.getString(4));
                    row.add(resultSet.getString(5));
                    
                    model.addRow(row);
                }
            } catch (Exception e){
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void hapusDataTerpilih() {
        DefaultTableModel model = (DefaultTableModel) tabelKeranjang.getModel();
        int selectedRow = tabelKeranjang.getSelectedRow();

        if (selectedRow != -1) {
            int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirmation", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                model.removeRow(selectedRow);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        textTotal.setText(Double.toString(jumlahTotal()));
    }
    
    private void addToKeranjang(){
        String namaBarang = textNamaBarangBeli.getText();
        double hargaBarang = Double.parseDouble(textHargaBeli.getText());
        double jumlah = Double.parseDouble(textJumlahBeli.getText());
        double total = hargaBarang * jumlah;
        
        DefaultTableModel model = (DefaultTableModel) tabelKeranjang.getModel();
        boolean barangSudahAda = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                String existingNamaBarang = model.getValueAt(i, 0).toString();
                if (existingNamaBarang.equals(namaBarang)) {
                    double existingJumlah = Double.parseDouble(model.getValueAt(i, 2).toString());
                    double newJumlah = jumlah;
                    double totalJumlah = existingJumlah + newJumlah;

                    double existingTotal = Double.parseDouble(model.getValueAt(i, 3).toString());
                    double newTotal = total;
                    double totalHarga = existingTotal + newTotal;

                    model.setValueAt(totalJumlah, i, 2);
                    model.setValueAt(totalHarga, i, 3);

                    barangSudahAda = true;
                    break;
                }
            }

          
        if (!barangSudahAda) {
            Object[] row = {namaBarang, hargaBarang, jumlah, total}; 
            model.addRow(row);
        }
        textTotal.setText(Double.toString(jumlahTotal()));
    }
    
    private double jumlahTotal() {
        DefaultTableModel model = (DefaultTableModel) tabelKeranjang.getModel();
        double total = 0.0;

        for (int i = 0; i < model.getRowCount(); i++) {
            double nilaiTotal = Double.parseDouble(model.getValueAt(i, 3).toString());
            total += nilaiTotal;
        }

        return total;
    }
    
   

    public static String generateID() {
        int lastGeneratedNumber = 1;
        SimpleDateFormat dateFormat = new SimpleDateFormat("ddMMyyyy");
        String currentDate = dateFormat.format(new Date());

        // Format ID dengan menambahkan 3 digit angka
        String generatedID = currentDate + String.format("%03d", lastGeneratedNumber);

        // Cek apakah ID sudah ada di database
        while (idAlreadyExists(generatedID)) {
            lastGeneratedNumber++;
            generatedID = currentDate + String.format("%03d", lastGeneratedNumber);
        }

        return generatedID;
    }

    private static boolean idAlreadyExists(String generatedID) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");

            String checkQuery = "SELECT Id_Pembelian FROM Pembelian WHERE Id_Pembelian = ?";
            
            try (PreparedStatement preparedStatement = connection.prepareStatement(checkQuery)) {
                preparedStatement.setString(1, generatedID);
                
                ResultSet resultSet = preparedStatement.executeQuery();
                return resultSet.next(); // true jika ID sudah ada, false jika belum
            }
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private void checkout(){
        DefaultTableModel model = (DefaultTableModel) tabelKeranjang.getModel();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String currentDate = dateFormat.format(new Date());
        double totalAkhir = Double.parseDouble(textTotal.getText());
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=BintangJaya;user=root;password=rifkyhadi7;encrypt=true;trustServerCertificate=true;");
            String pembelianQuery = "INSERT INTO Pembelian (Id_Pembelian, Tanggal, Total) VALUES (?, ?, ?)";
            
            
            String insertQuery = "INSERT INTO Detail_Pembelian (Id_Pembelian, Id_Barang, Quantity, Total) VALUES (?, ?, ?, ?)";
            try(PreparedStatement preparedStatement = connection.prepareStatement(pembelianQuery)){
                preparedStatement.setString(1, textIdPembelian.getText());
                preparedStatement.setString(2, currentDate);
                preparedStatement.setDouble(3, totalAkhir);
                
                int result = preparedStatement.executeUpdate();
                
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Record updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error updating record!", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }catch (Exception e) {
                e.printStackTrace();
            }
            
            try (PreparedStatement preparedStatement = connection.prepareStatement(insertQuery)) {
                for (int i = 0; i < model.getRowCount(); i++) {
                    String idPembelian = textIdPembelian.getText();
                    String namaBarang = model.getValueAt(i, 0).toString();
                    String idBarang = getIdBarangFromNamaBarang(namaBarang);
                    String jumlah = model.getValueAt(i, 2).toString();
                    String total = model.getValueAt(i, 3).toString();

                    preparedStatement.setString(1, idPembelian);
                    preparedStatement.setString(2, idBarang);
                    preparedStatement.setDouble(3, Double.parseDouble(jumlah));
                    preparedStatement.setDouble(4, Double.parseDouble(total));

                    preparedStatement.addBatch();
                }

                int[] rowsAffected = preparedStatement.executeBatch();

                // Periksa hasil eksekusi batch
                for (int i : rowsAffected) {
                    if (i <= 0) {
                        JOptionPane.showMessageDialog(this, "Error saving data to the database.", "Error", JOptionPane.ERROR_MESSAGE);
                        return; // Hentikan eksekusi jika ada kesalahan
                    }
                }

                JOptionPane.showMessageDialog(this, "Data saved successfully to the database.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel labelPenjualan;
    private javax.swing.JTable tabelBarang;
    private javax.swing.JTable tabelKeranjang;
    private javax.swing.JTable tabelPembelian;
    private javax.swing.JTable tabelPenjualan;
    private javax.swing.JTextField textBarangPembelian;
    private javax.swing.JTextField textCari;
    private javax.swing.JTextField textCari1;
    private javax.swing.JTextField textCariPembelian;
    private javax.swing.JTextField textHarga;
    private javax.swing.JTextField textHargaBeli;
    private javax.swing.JTextField textHargaPembelian;
    private javax.swing.JTextField textIDPembelian;
    private javax.swing.JTextField textIdBarang;
    private javax.swing.JTextField textIdPembelian;
    private javax.swing.JTextField textJumlahBeli;
    private javax.swing.JTextField textJumlahPembelian;
    private javax.swing.JTextField textNamaBarang;
    private javax.swing.JTextField textNamaBarangBeli;
    private javax.swing.JTextField textTotal;
    private javax.swing.JTextField textTotalPembelian;
    // End of variables declaration//GEN-END:variables
}
